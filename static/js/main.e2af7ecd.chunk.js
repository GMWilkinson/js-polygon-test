(this["webpackJsonpjs-polygon-test"]=this["webpackJsonpjs-polygon-test"]||[]).push([[0],{11:function(e,t,n){e.exports=n(19)},16:function(e,t,n){},18:function(e,t,n){},19:function(e,t,n){"use strict";n.r(t);var o=n(0),a=n.n(o),s=n(1),r=n.n(s),i=(n(16),n(3)),h=n(4),l=n.n(h),c=n(6),u=n(7),f=n(8),d=n(2),y=n(10),v=n(9),g=(n(18),[{x:100,y:120},{x:200,y:70},{x:300,y:70},{x:400,y:220},{x:350,y:270},{x:200,y:320},{x:150,y:320}]),p=[{x:100,y:120},{x:230,y:110},{x:280,y:90},{x:300,y:220},{x:350,y:270},{x:200,y:320},{x:150,y:320}],x=function(e){Object(y.a)(n,e);var t=Object(v.a)(n);function n(e){var o;return Object(u.a)(this,n),(o=t.call(this,e)).state={isDown:!1,startPointX:"",startPointY:"",fromTop:0,fromLeft:0,shapeWidth:0,shapeHeight:0,arrOfPolygonCoords:[],draggedLineCoords:[],polyObj:"startPoly",errMessage:""},o.handleMouseDown=o.handleMouseDown.bind(Object(d.a)(o)),o.handleMouseMove=o.handleMouseMove.bind(Object(d.a)(o)),o.handleMouseUp=o.handleMouseUp.bind(Object(d.a)(o)),o}return Object(f.a)(n,[{key:"componentDidMount",value:function(){this.drawPolygon()}},{key:"handleMouseDown",value:function(e){var t=this;this.setState({isDown:!0,startPointX:e.offsetX,startPointY:e.offsetY},(function(){var n=r.a.findDOMNode(t.refs.canvas),o=e.offsetX,a=e.offsetY,s=n.getContext("2d");s.moveTo(o,a),s.lineTo(o+1,a+1),s.stroke()}))}},{key:"handleMouseMove",value:function(){}},{key:"handleMouseUp",value:function(e){this.setState({isDown:!1});var t=r.a.findDOMNode(this.refs.canvas),n=e.offsetX,o=e.offsetY,a=t.getContext("2d");a.moveTo(this.state.startPointX,this.state.startPointY),a.lineTo(n,o),a.stroke(),a.closePath(),this.setState({endPointX:n,endPointY:o},Object(c.a)(l.a.mark((function e(){var t,a,s,r,i,h;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.state,a=t.startPointX,s=t.startPointY,r=[a,s],i=[n,o],e.next=5,this.lineCoords(r[0],r[1],i[0],i[1]);case 5:h=e.sent,this.setState({draggedLineCoords:h},(function(){this.getPointIntersections()}));case 7:case"end":return e.stop()}}),e,this)}))))}},{key:"drawPolygon",value:function(e){this.setState({errMessage:""});var t=r.a.findDOMNode(this.refs.canvas),n=t.getContext("2d");n.clearRect(0,0,t.width,t.height),n.beginPath();var o="newPoly"===e?p:g;this.setState({polyObj:e});for(var a=[],s=0;s<o.length;s++)if(0===s){n.moveTo(o[s].x,o[s].y);var i=[o[s].x,o[s].y],h=[o[s+1].x,o[s+1].y];a.push(this.lineCoords(i[0],i[1],h[0],h[1]))}else if(s===o.length-1){n.lineTo(o[s].x,o[s].y);var l=[o[s].x,o[s].y],c=[o[0].x,o[0].y];a.push(this.lineCoords(l[0],l[1],c[0],c[1]))}else{n.lineTo(o[s].x,o[s].y);var u=[o[s].x,o[s].y],f=[o[s+1].x,o[s+1].y];a.push(this.lineCoords(u[0],u[1],f[0],f[1]))}n.closePath(),n.stroke(),this.setState({arrOfPolygonCoords:a})}},{key:"drawNewShapes",value:function(e,t){var n=this.state.polyObj,o="newPoly"===n?p.map((function(e){return Object(i.a)({},e)})):g.map((function(e){return Object(i.a)({},e)})),a="newPoly"===n?p.map((function(e){return Object(i.a)({},e)})):g.map((function(e){return Object(i.a)({},e)}));if(2===t.length){var s=[],h=[];o.forEach((function(n,a){if(a<t[0]+1&&s.push(n),a===t[0]+1&&s.push({x:e[0][0],y:e[0][1]}),a===t[1]&&s.push({x:e[1][0],y:e[1][1]}),a>t[1]){if(!(o.length-t[1]>1))return;s.push(n)}})),a.forEach((function(n,o){o===t[0]&&h.push({x:e[0][0],y:e[0][1]}),o>t[0]&&o<t[1]+1&&h.push(n),o===t[1]&&h.push({x:e[1][0],y:e[1][1]}),t[1]}));var l=r.a.findDOMNode(this.refs.canvas),c=l.getContext("2d");c.clearRect(0,0,l.width,l.height),c.beginPath();for(var u=0;u<s.length;u++)0===u?c.moveTo(s[u].x-50,s[u].y-50):c.lineTo(s[u].x-50,s[u].y-50);c.closePath(),c.stroke(),c.beginPath();for(var f=0;f<h.length;f++)0===f?c.moveTo(h[f].x+50,h[f].y+50):c.lineTo(h[f].x+50,h[f].y+50);c.closePath(),c.stroke(),setTimeout(function(){c.clearRect(0,0,l.width,l.height),this.drawPolygon(n)}.bind(this),2e3)}else this.setState({errMessage:"Sorry, there has been a problem, try dragging slowly"}),setTimeout(function(){var e=r.a.findDOMNode(this.refs.canvas);e.getContext("2d").clearRect(0,0,e.width,e.height),this.drawPolygon(n)}.bind(this),2e3)}},{key:"getPointIntersections",value:function(){for(var e=this.state,t=e.arrOfPolygonCoords,n=e.draggedLineCoords,o=[],a=[],s=0;s<t.length;s++)for(var r=0;r<n.length;r++)for(var i=0;i<t[s].length;i++){JSON.stringify(n[r])===JSON.stringify(t[s][i])&&(o.push(n[r]),a.push(s))}this.drawNewShapes(o,a)}},{key:"lineCoords",value:function(e,t,n,o){for(var a=Math.abs(n-e),s=Math.abs(o-t),r=e<n?1:-1,i=t<o?1:-1,h=a-s,l=[];e!==n||t!==o;){var c=2*h;c>-s&&(h-=s,e+=r),c<a&&(h+=a,t+=i),l.push([e,t])}return l}},{key:"render",value:function(){var e=this,t=this.state.errMessage;return a.a.createElement("main",{className:"main-container"},a.a.createElement("h1",null,"Polygon Cutter"),a.a.createElement("h2",null,"Drag a line across the polygon"),a.a.createElement("div",null,a.a.createElement("h2",null,t),a.a.createElement("canvas",{id:"canvas",ref:"canvas",width:500,height:400,onMouseDown:function(t){var n=t.nativeEvent;e.handleMouseDown(n)},onMouseMove:function(t){var n=t.nativeEvent;e.handleMouseMove(n)},onMouseUp:function(t){var n=t.nativeEvent;e.handleMouseUp(n)}})),a.a.createElement("button",{onClick:function(){return e.drawPolygon("newPoly")}},"Different Polygon"),a.a.createElement("button",{onClick:function(){return e.drawPolygon("startPoly")}},"Original Polygon"))}}]),n}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(x,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[11,1,2]]]);
//# sourceMappingURL=main.e2af7ecd.chunk.js.map